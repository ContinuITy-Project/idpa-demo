<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Testplan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="Benutzer definierte Variablen" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="testplan_dir" elementType="Argument">
            <stringProp name="Argument.name">testplan_dir</stringProp>
            <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}/</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Input_content_repositories_repositoryId_UsingGET_repositoryId" elementType="Argument">
            <stringProp name="Argument.name">Input_content_repositories_repositoryId_UsingGET_repositoryId</stringProp>
            <stringProp name="Argument.value">diagnoseIT;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;CamundaPublic;novatec-snapshots;diagnoseIT-snapshots;diagnoseIT;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;CamundaPublic;diagnoseIT;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;novatec;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;3rd_party_libs;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;novatec;novatec;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;novatec;novatec;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;novatec;3rd_party_libs;novatec;novatec;novatec;novatec;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;3rd_party_libs;novatec;novatec;novatec;novatec;novatec;novatec;novatec;3rd_party_libs;novatec;novatec;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Input_content_repositories_repository_UsingHEAD_repositoryId" elementType="Argument">
            <stringProp name="Argument.name">Input_content_repositories_repository_UsingHEAD_repositoryId</stringProp>
            <stringProp name="Argument.value">3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;novatec;novatec;novatec;novatec;novatec;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;novatec;novatec;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;novatec;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;3rd_party_libs;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Input_repositories_repositoryId_content_UsingGET_repositoryId" elementType="Argument">
            <stringProp name="Argument.name">Input_repositories_repositoryId_content_UsingGET_repositoryId</stringProp>
            <stringProp name="Argument.value">diagnoseIT;3rd_party_libs;3rd_party_libs;3rd_party_libs;novatec;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="Input_artifact_maven_contentUsingPOST_r" elementType="Argument">
            <stringProp name="Argument.name">Input_artifact_maven_contentUsingPOST_r</stringProp>
            <stringProp name="Argument.value">3rd_party_libs;diagnoseIT;novatec;</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Basic YWRtaW46YWRtaW4xMjM=</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="ThreadGroup.ramp_time">60</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">60</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <LoopController guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <intProp name="LoopController.loops">-1</intProp>
        </LoopController>
        <hashTree>
          <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Session Config" enabled="true">
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="fileEncoding"></stringProp>
            <stringProp name="filename">${testplan_dir}sessions/session-${__threadNum}.csv</stringProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="quotedData">true</boolProp>
            <boolProp name="recycle">true</boolProp>
            <stringProp name="shareMode">shareMode.group</stringProp>
            <boolProp name="stopThread">false</boolProp>
            <stringProp name="variableNames">delay,method,request,contenttype,body</stringProp>
          </CSVDataSet>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Random CsvInput (content_repositories_repository_artifactUsingHEAD.csv)" enabled="true">
            <stringProp name="filename">content_repositories_repository_artifactUsingHEAD.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">Input_content_repositories_repository_artifactUsingHEAD_repositoryId,Input_content_repositories_repository_artifactUsingHEAD_artifact</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Random CsvInput (artifact_maven_resolveUsingGET.csv)" enabled="true">
            <stringProp name="filename">artifact_maven_resolveUsingGET.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">Input_artifact_maven_resolveUsingGET_r,Input_artifact_maven_resolveUsingGET_g,Input_artifact_maven_resolveUsingGET_a,Input_artifact_maven_resolveUsingGET_v,Input_artifact_maven_resolveUsingGET_e</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Random CsvInput (content_repositories_repositoryId_artifactUsingGET.csv)" enabled="true">
            <stringProp name="filename">content_repositories_repositoryId_artifactUsingGET.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">Input_content_repositories_repositoryId_artifactUsingGET_repositoryId,Input_content_repositories_repositoryId_artifactUsingGET_artifact</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Random CsvInput (lucene_searchUsingGET.csv)" enabled="true">
            <stringProp name="filename">lucene_searchUsingGET.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">Input_lucene_searchUsingGET_q,Input_lucene_searchUsingGET_collapseresults</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Random CsvInput (repositories_repositoryId_content_artifactUsingGET.csv)" enabled="true">
            <stringProp name="filename">repositories_repositoryId_content_artifactUsingGET.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">Input_repositories_repositoryId_content_artifactUsingGET_repositoryId,Input_repositories_repositoryId_content_artifactUsingGET_artifact,Input_repositories_repositoryId_content_artifactUsingGET_describe,Input_repositories_repositoryId_content_artifactUsingGET_isLocal</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <com.blazemeter.jmeter.RandomCSVDataSetConfig guiclass="com.blazemeter.jmeter.RandomCSVDataSetConfigGui" testclass="com.blazemeter.jmeter.RandomCSVDataSetConfig" testname="Random CsvInput (repositories_repositoryId_index_content_UsingGET.csv)" enabled="true">
            <stringProp name="filename">repositories_repositoryId_index_content_UsingGET.csv</stringProp>
            <stringProp name="fileEncoding">UTF-8</stringProp>
            <stringProp name="delimiter">,</stringProp>
            <stringProp name="variableNames">Input_repositories_repositoryId_index_content_UsingGET_repositoryId,Input_repositories_repositoryId_index_content_UsingGET_groupIdHint,Input_repositories_repositoryId_index_content_UsingGET_artifactIdHint</stringProp>
            <boolProp name="randomOrder">true</boolProp>
            <boolProp name="ignoreFirstLine">true</boolProp>
            <boolProp name="rewindOnTheEndOfList">true</boolProp>
            <boolProp name="independentListPerThread">false</boolProp>
          </com.blazemeter.jmeter.RandomCSVDataSetConfig>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">${__unescape(${__eval(${body})})}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">172.16.145.67</stringProp>
            <stringProp name="HTTPSampler.port">8081</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">${__eval(${request})}</stringProp>
            <stringProp name="HTTPSampler.method">${method}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">${contenttype}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
              <stringProp name="ConstantTimer.delay">${delay}</stringProp>
            </ConstantTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <sampleCount>true</sampleCount>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">${testplan_dir}/jmeter-results-annotated.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
